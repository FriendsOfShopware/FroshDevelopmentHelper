<?php

// Set the path to composer. Can also be something like "php /home/user/composer.phar"
$composerPhar = $_SERVER['COMPOSER_PHAR'] ?? 'composer';

$pluginDepsFile = __DIR__ . '/deps.json';
$composerWorkingDir = __DIR__ . '/vendor';
$composerFile = $composerWorkingDir . '/composer.json';
$shopwareComposerLockFile = __DIR__ . '/../../../composer.lock';

exec(sprintf('rm -rf %s', escapeshellarg($composerWorkingDir)));

$lock = json_decode(file_get_contents($shopwareComposerLockFile), true);
$currentCompopserJson = json_decode(file_get_contents($pluginDepsFile), true);

$newComposerJson = ['require' => []];

foreach ($currentCompopserJson['require'] as $package => $version) {
    if (strpos($package, 'shopware/') !== false ) {
        continue;
    }

    $newComposerJson['require'][$package] = $version;
}

foreach ($lock['packages'] as $package) {
    $newComposerJson['replace'][$package['name']] = $package['version'];
}

mkdir($composerWorkingDir);

file_put_contents($composerWorkingDir . '/composer.json', json_encode($newComposerJson, JSON_PRETTY_PRINT));

exec(sprintf('COMPOSER=%s %s install -d %s', escapeshellarg($composerFile), $composerPhar, escapeshellarg($composerWorkingDir)));

$autoloadFile = <<<EOF
<?php

// autoload.php @generated by ../vendor-builder.php

if (file_exists(__DIR__ . '/vendor/autoload.php')) {
    require __DIR__ . '/vendor/autoload.php';
}
EOF;

file_put_contents($composerWorkingDir . '/autoload.php', $autoloadFile);
