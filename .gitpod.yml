image:
  file: .gitpod.Dockerfile

tasks:
  - name: Shopware
    before: |
      echo 'alias admin-watch="LOAD_DOTENV=0 APP_URL=http://localhost:8000 ./bin/watch-administration.sh"' >> ~/.bashrc
    init: |
      EXTENSION_NAME=$(basename $PWD)
      TMP_DIR=$(mktemp -d)
      
      mv * .* "$TMP_DIR" || true
      
      # Run MySQL
      docker run --restart always -d --name=mysql -p 127.0.0.1:3306:3306 -e MYSQL_ROOT_PASSWORD=root mysql:8
      docker run --restart always -d --name=adminer --link mysql:mysql -p 5000:8080 -e ADMINER_DESIGN=pepa-linha -e ADMINER_DEFAULT_SERVER=mysql -e ADMINER_PLUGINS="tables-filter table-structure json-column version-noverify" ghcr.io/shyim/shopware-docker/adminer
      
      composer config --global github-oauth.github.com $(printf '%s\n' host=github.com | gp credential-helper get | sort | head -2 | tail -1 | sed 's;password=;;')
      
      composer create-project shopware/production:dev-flex . -n
      composer req --dev profiler fakerphp/faker mbezhanov/faker-provider-collection maltyxx/images-generator
      # Configure Shopware
      sed -i -e 's;DATABASE_URL=.*$;DATABASE_URL=mysql://root:root@127.0.0.1:3306/shopware;' .env
      sed -i -e "s;APP_URL=.*$;APP_URL=$(gp url 8000);" .env
      echo "TRUSTED_PROXIES=192.168.0.0/16" >> .env
      
      ./bin/console system:install --basic-setup --create-database --drop-database
      
      ./bin/console system:config:set core.frw.completedAt '2019-10-07T10:46:23+00:00'
      
      ./bin/console framework:demodata --products 300
      ./bin/console dal:refresh:index
      rm -rf var/cache/*
      # Set by default to dev
      sed -i -e "s;APP_ENV=.*$;APP_URL=dev;" .env
      
      # Move actual repository
      mv "$TMP_DIR" "custom/plugins/$EXTENSION_NAME"
      cp "custom/plugins/$EXTENSION_NAME/.gitpod.yml" .
      
      shopware-cli extension prepare "custom/plugins/$EXTENSION_NAME"
      shopware-cli extension build "custom/plugins/$EXTENSION_NAME"
    command: |
      # Gitpod registers the ports on first docker command
      docker ps
      
      # Wait for port open
      gp ports await 3306
      
      # Wait until MySQL is reachable
      until mysqladmin ping; do
          sleep 1
      done
      
      # Update domain url
      ./bin/console sales-channel:update:domain $(gp url 8000 | awk -F[/:] '{print $4}')
      
      # Start Webserver
      symfony server:start --port 8000 -d
  - name: Getting Started
    command: |
      echo 'Hey!. Your environment is starting soon. You can see the progress in the Shopware Terminal'
      echo 'If you want to run the Admin Watch, just use the Terminal alias: admin-watch'
      echo 'Happy Coding!'
      echo "Shop URL: $(gp url 8000)"
      echo "Admin-Watcher URL: $(gp url 8080)"
      echo "Adminer URL: $(gp url 5000)"
ports:
  - port: 8000
    visibility: private
    description: Shopware
    onOpen: open-browser
  - port: 5000
    visibility: private
    description: Adminer
    onOpen: notify
  - name: Admin-Watcher
    port: 8080
    onOpen: notify
    description: "Use Forward Proxy to localhost to access this service"

jetbrains:
  plugins:
    - com.jetbrains.php
    - com.intellij.php.tools.quality.phpstan
    - com.intellij.php.psalm
    - org.jetbrains.plugins.yaml
    - com.jetbrains.twig
    - fr.adrienbrault.idea.symfony2plugin
    - de.shyim.shopware6
    - de.shyim.ideaphpstantoolbox
    - de.espend.idea.php.annotation
  phpstorm:
    vmoptions: "-Xmx4g"
    prebuilds:
      version: stable

vscode:
  extensions:
    - bmewburn.vscode-intelephense-client
    - redhat.vscode-yaml

github:
  prebuilds:
    master: true
    branches: true
    pullRequests: true
    pullRequestsFromForks: true
    addCheck: false
    addComment: false
    addBadge: true